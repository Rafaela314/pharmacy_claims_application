// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: reversal.sql

package db

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const createReversal = `-- name: CreateReversal :one
INSERT INTO reversals (
  claim_id  
) VALUES (
  $1
)
RETURNING id, claim_id, timestamp
`

func (q *Queries) CreateReversal(ctx context.Context, claimID pgtype.UUID) (Reversal, error) {
	row := q.db.QueryRow(ctx, createReversal, claimID)
	var i Reversal
	err := row.Scan(&i.ID, &i.ClaimID, &i.Timestamp)
	return i, err
}

const getReversalByClaimID = `-- name: GetReversalByClaimID :one
SELECT id, claim_id, timestamp FROM reversals
WHERE claim_id = $1 LIMIT 1
`

func (q *Queries) GetReversalByClaimID(ctx context.Context, claimID pgtype.UUID) (Reversal, error) {
	row := q.db.QueryRow(ctx, getReversalByClaimID, claimID)
	var i Reversal
	err := row.Scan(&i.ID, &i.ClaimID, &i.Timestamp)
	return i, err
}
